#! /usr/bin/env python3

import numpy as np

with open('PARAM', 'r') as f:
    for i, line in enumerate(f):
        if i == 3:
            TRAIN_SIZE = int(line.split(' = ')[1])
        if i == 4:
            TEST_SIZE = int(line.split(' = ')[1])
        if i == 8:
            MAX_CELLS = int(line.split(' = ')[1])

ref_prey = np.zeros(MAX_CELLS, dtype=np.float64)
ref_prey[MAX_CELLS//2-1 : MAX_CELLS//2+2] = 1
ref_pred = np.zeros(MAX_CELLS, dtype=np.float64)
ref_pred[MAX_CELLS//4 : 3*MAX_CELLS//4+1] = 1


def perturb(ref, num, std=0.3):
    d = np.abs(np.random.normal(ref, std, size=(num, MAX_CELLS)))
    d_min = d.min(axis=1)
    d_max = d.max(axis=1)
    d = (d - d_min[:, None]) / (d_max - d_min)[:, None]
    return d

def gen_data(num):
    t = np.zeros((num, MAX_CELLS), dtype=np.float64)
    t[:num//2] = perturb(ref_prey, num//2)
    t[num//2:] = perturb(ref_pred, num//2)

    l = np.ones(num, dtype=np.int32)
    l[num//2:] = 0 # Pred with label 0, prey with label 1
    indices = np.arange(start=0, stop=num)
    np.random.shuffle(indices)
    t = t[indices]
    l = l[indices]
    return t, l

train, train_labels = gen_data(TRAIN_SIZE)
test, test_labels = gen_data(TEST_SIZE)

data = np.append(train, test, axis=0)
labels = np.append(train_labels, test_labels, axis=0)

np.savetxt('DATA', data, fmt='%0.5f')
np.savetxt('LABELS', labels, fmt='%d')
